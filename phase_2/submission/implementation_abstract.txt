After the initial concept was made, i started working on implementing the database using MySQL 8.1.

Before i talk about the steps i took to implement the database i would like to talk about what exactly it is that needed to be achieved. The goal of this phase is to, obviously, implement the concept but also to create data entries and test cases for it, as well as document each component.

With this goal in mind i began with translating the ER model into individual CREATE statements to implement the respective tables. While doing so i iteratively made adjustments to both the ER model, the data dictionary and the documentation. Building up the structure of the datamodel i began running 'system tests' to see if all the constraints would work well with each other, making small adjustments and iterations where necessary. (Changes are documenting in the presentation)

After completing the structure of the model i created dummy data. I tried to keep the dummy data somewhat realistic without using unreasonable effort, the test data should therefore be semi-plausable and sufficient for testing.

After creating the test data, and continuously iterating on the structure and individual attributes to improve overall quality, i started creating the final test cases for the submission. The final test cases should yield good results in both depth and coverage, they are well documented and the statements are easily readable.

To sum up the implementation process of this database, the rough order is starting with the schema structure, then implementing test data and finally test case. It should be noted that this was/is a knowledge-based, iterative process and while the sequence of tasks outlined above is accurate, many aspects intertwine and affect each other resulting in simultaneously building up multiple parts to test or improve the whole structure. This resulted in comparatively little rework throughout the process.

----------------
v2 (199 is < 200 words)
----------------

The database implementation commenced by translating the Entity-Relationship (ER) model into CREATE statements for individual tables, accompanied by iterative refinements to the ER model, data dictionary, and documentation. Occasionaly 'system tests' were conducted to ensure seamless constraint functionality, prompting necessary adjustments.

Once the foundational structure was established, focus shifted to generating semi-plausible dummy data, refining database attributes continually. This iterative process involved ongoing testing, adjusting and documentation updates to improve the overall quality and coherence.

Following that, final test cases were created for the submission. The final test cases should yield good results in both depth and coverage, they are well documented and the statements are easily readable.

To sum up the implementation process of this database, the rough order is starting with the schema structure, then implementing test data and finally test case. It should be noted that this was/is a knowledge-based, iterative process and while the sequence of tasks outlined above is accurate, many aspects intertwine and affect each other resulting in simultaneously building up multiple parts to test or improve the whole structure. The implementation's primary focus was constant refinement to ensure a robust, well-documented database. This resulted in comparatively little rework throughout the process.


--------
v3 
--------
The database implementation commenced by translating the Entity-Relationship (ER) model into CREATE statements for individual tables, accompanied by iterative refinements to the ER model, data dictionary, and documentation. Occasionaly 'system tests' were conducted to ensure seamless constraint functionality, prompting necessary adjustments.

Once the foundational structure was established, focus shifted to generating semi-plausible dummy data, refining database attributes continually. This iterative process involved ongoing testing, adjusting and documentation updates to improve the overall quality and coherence.

Following that, final test cases were created for the submission. The final test cases should yield good results in both depth and coverage, they are well documented and the statements are easily readable.

To sum up the implementation process of this database, the rough order is starting with the schema structure, then implementing test data and finally test case. The implementation's primary focus was constant refinement to ensure a robust, well-documented database. This resulted in comparatively little rework throughout the process.

(I have additionally attached the previously missing data dictionary to the submission)